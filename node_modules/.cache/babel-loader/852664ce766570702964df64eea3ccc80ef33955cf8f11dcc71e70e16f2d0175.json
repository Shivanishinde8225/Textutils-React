{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\for20\\\\OneDrive\\\\Desktop\\\\react app\\\\demo\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import logo from './logo.svg';\nimport React, { useState } from 'react';\nimport './App.css';\n// import Mydemo from './Mydemo';\nimport Navbar from './Navbar';\nimport TextBox from './TextBox';\nimport Alert from './Alert';\nimport About from './About';\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setmode] = useState('dark');\n  const [alert, setAlter] = useState(null);\n  const showAlter = (message, type) => {\n    setAlter({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlter(null);\n    }, 2000);\n  };\n  const toggle = () => {\n    if (mode === 'dark') {\n      setmode('light');\n      document.body.style.backgroundColor = '#ebedf5';\n      showAlter(\"light mode is Enable\", \"success\");\n      document.title = \"Textutils -LightMode\";\n    } else {\n      setmode('dark');\n      document.body.style.backgroundColor = '#0c2036';\n      showAlter(\"Dark mode is Enable\", \"success\");\n      document.title = \"Textutils -DarkMode\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blank\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"Textutils\",\n        about: \"About\",\n        mode: mode,\n        toggle: toggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(TextBox, {\n            heading: \"Enter the text to analyze\",\n            mode: mode,\n            showAlter: showAlter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/about\",\n          element: /*#__PURE__*/_jsxDEV(About, {\n            mode: mode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EeEaeWuyHSovSLedsYIx0R9uGkA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","TextBox","Alert","About","BrowserRouter","Router","Routes","Route","Link","jsxDEV","_jsxDEV","App","_s","mode","setmode","alert","setAlter","showAlter","message","type","msg","setTimeout","toggle","document","body","style","backgroundColor","title","children","className","about","fileName","_jsxFileName","lineNumber","columnNumber","exact","path","element","heading","_c","$RefreshReg$"],"sources":["C:/Users/for20/OneDrive/Desktop/react app/demo/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport React, { useState } from 'react';\nimport './App.css';\n// import Mydemo from './Mydemo';\nimport Navbar from './Navbar';\nimport TextBox from './TextBox';\nimport Alert from './Alert';\nimport About from './About';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link,\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState('dark');\n  const [alert, setAlter] = useState(null);\n  const showAlter = (message, type) => {\n    setAlter({\n      msg: message,\n      type: type,\n    })\n    setTimeout(() => {\n      setAlter(null);\n    }, 2000)\n  }\n\n  const toggle = () => {\n    if (mode === 'dark') {\n      setmode('light');\n      document.body.style.backgroundColor = '#ebedf5';\n      showAlter(\"light mode is Enable\", \"success\");\n      document.title = \"Textutils -LightMode\";\n    }\n    else {\n      setmode('dark');\n      document.body.style.backgroundColor = '#0c2036';\n      showAlter(\"Dark mode is Enable\", \"success\");\n      document.title = \"Textutils -DarkMode\";\n    }\n  }\n  return (\n    <Router>\n    <div className='blank'>\n      {/* <Navbar/> */}\n      <Navbar title=\"Textutils\" about=\"About\" mode={mode} toggle={toggle} />\n      {/* <Mydemo/> */}\n      <Alert alert={alert} /> \n        <Routes>\n          <Route exact path=\"/\" element={<TextBox heading=\"Enter the text to analyze\"  mode={mode} showAlter={showAlter}/>} />\n          <Route exact path=\"/about\" element={ <About mode={mode}/>} />\n        </Routes>\n       \n        {/* <Router>\n        <Routes path='/about'>\n          <About mode={mode}/>\n        </Routes>\n        <Routes path='/'>\n          <TextBox heading=\"Enter the text to analyze\"  mode={mode} showAlter={showAlter}/>\n        </Routes>\n      </Router>*/}\n      \n      </div>\n      </Router>\n      );\n  \n}\n\n      export default App;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}